{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 //-----------------------------------------------------------------------------\
// Program code for CS 415/515 Parallel Programming, Portland State University.\
//-----------------------------------------------------------------------------\
\
// A deposit-withdraw program.\
//\
// Usage: ./bank\
//\
//\
#include <stdio.h>\
#include <stdlib.h>\
#include <time.h>\
#include <omp.h>\
\
#define INIT_BALANCE  1000\
#define NUM_DEPOSITS  10\
#define NUM_WITHDRAWS 10\
#define DEPOSIT_AMT   100\
#define WITHDRAW_AMT  200\
\
int total;  // account balance\
\
void deposit(int i) \{\
  int amount = rand() % DEPOSIT_AMT;\
#pragma omp critical\
  \{\
  int oldtotal = total;\
//#pragma omp critical\
  total += amount;\
  printf("Deposit-%d %5d (%3d -> %3d)\\n", i, amount, oldtotal, total);\
  \}\
\}\
\
void withdraw(int i) \{\
  int amount = rand() % WITHDRAW_AMT;\
  int oldtotal = total;\
  if (amount < total) \{\
#pragma omp critical\
\{\
    total -= amount;\
    printf("Withdraw-%d %4d (%3d -> %3d)\\n", i, amount, oldtotal, total);\
  \}\
  \} else \{\
    printf("Withdraw-%d %4d (%3d) **aborted**\\n", i, amount, oldtotal);\
  \}\
\}\
int main() \{\
  total = INIT_BALANCE;\
  srand(time(NULL));\
#pragma omp parallel sections\
  \{\
#pragma omp section\
          \{\
  for (int i = 1; i <= NUM_DEPOSITS; i++)\
    deposit(i);\
          \}\
#pragma omp section\
          \{\
  for (int i = 1; i <= NUM_WITHDRAWS; i++)\
    withdraw(i);\
          \}\
  \}\
\}}